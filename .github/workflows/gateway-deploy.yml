name: CI/CD for Gateway-Module Gradle Spring Boot Application

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      NAME: 'ag-gateway'
      EC2_HOST: ${{ secrets.GATEWAY_EC2_HOST }}
      EC2_PORT: ${{ secrets.GATEWAY_EC2_PORT }}
      EC2_KEY: ${{ secrets.EC2_KEY }}
      AWS_ROLE: ${{ secrets.AWS_ROLE_TO_ASSUME }}
      PORT: ${{ secrets.SCP_PORT }}
      EC2_PEM_KEY: ${{ secrets.EC2_PEM_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set environment variables
        run: |
          echo "EC2_HOST=${{ secrets[format('{0}_EC2_HOST', matrix.prefix)] }}" >> $GITHUB_ENV
          echo "EC2_PORT=${{ secrets[format('{0}_EC2_PORT', matrix.prefix)] }}" >> $GITHUB_ENV
          echo "EC2_HOST: ${{ env.EC2_HOST }}"
          echo "EC2_PORT: ${{ env.EC2_PORT }}"
          echo "EC2_HOST: ${EC2_HOST}"
          echo "EC2_PORT: ${EC2_PORT}"
          
          echo "E=33" >> $GITHUB_ENV
          echo "E: ${E}"

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle for ${{ env.NAME }}
        run: ./gradlew :${{ env.NAME }}:bootJar

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: 'ap-northeast-2'
          role-to-assume: ${{ env.AWS_ROLE }} # IAM Role ARN

      - name: 서비스 실행
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ env.EC2_HOST }}
          username: ubuntu
          key: ${{ env.EC2_PEM_KEY }}
          port: 22
          script: |
            sudo rm -rf /home/ubuntu/${{ env.NAME }}/*.jar
            lsof -t -i tcp:8080 | xargs kill -9
            git checkout main
            git pull origin main
            /home/ubuntu/${{ env.NAME }}/gradlew :${{ env.NAME }}:bootJar
            nohup env $(cat /home/ubuntu/${{ env.NAME }}.env | xargs) java -jar /home/ubuntu/${{ env.NAME }}-1.0.0.jar &

#      - name: 서비스 중지 및 jar 파일 삭제
#        uses: appleboy/ssh-action@v1.0.3
#        with:
#          host: ${{ env.EC2_HOST }}
#          username: ubuntu
#          key: ${{ env.EC2_PEM_KEY }}
#          port: 22
#          timeout: 120s
#          script: |
#            lsof -t -i tcp:8080 | xargs kill -9
#            sudo rm -rf /home/ec2-user/${{ env.NAME }}/*.jar

#      - name: Copy jar to EC2 for ${{ env.NAME }}
#        uses: appleboy/scp-action@v0.1.7
#        with:
#          host: ${{ env.EC2_HOST }}
#          username: ubuntu
#          port: 22
##          key: ${{ env.EC2_PEM_KEY }}
#          source: ${{ env.NAME }}/build/libs/*.jar
#          target: /home/ubuntu/${{ env.NAME }}.jar
#          timeout: 120s

#
#      - name: 서비스 실행
#        uses: appleboy/ssh-action@v1.0.3
#        with:
#          host: ${{ env.EC2_HOST }}
#          username: ubuntu
#          key: ${{ env.EC2_PEM_KEY }}
#          script: nohup env $(cat /home/ubuntu/${{ env.NAME }}.env | xargs) java -jar /home/ubuntu/${{ env.NAME }}-1.0.0.jar &